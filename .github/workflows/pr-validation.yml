---
  name: PR Validation
  
  on:
    pull_request:
      # Trigger on PRs targeting the main branch
      branches: [main]
      # Optionally trigger on pushes to the main branch as well
    # push:
    #   branches: [main]
  
  jobs:
    validate:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          # Use the Python version defined in pyproject.toml
          python-version: ['3.11']
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          # Fetch history needed for pytest-picked diff
          with:
            fetch-depth: 0
  
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python-version }}
  
        - name: Install Poetry
          uses: snok/install-poetry@v1
          with:
            virtualenvs-create: true
            virtualenvs-in-project: true
            installer-parallel: true
  
        - name: Load cached venv
          id: cached-poetry-dependencies
          uses: actions/cache@v4
          with:
            path: .venv
            key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
  
        - name: Install dependencies
          if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
          run: poetry install --no-interaction --no-root
  
        - name: Install project and test extras
          # Install root project and extras like pytest-picked
          run: poetry install --no-interaction --extras test
  
        # Pre-commit is good practice, but ensure its config aligns with poetry environment
        # - name: Run pre-commit hooks
        #   run: poetry run pre-commit run --all-files
  
        - name: Run tests on changed files (pytest-picked)
          env:
            # Pass secrets as environment variables
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
            VIRUSTOTAL_API_KEY: ${{ secrets.VIRUSTOTAL_API_KEY }}
            # Add other necessary env vars
          run: |
            # Fetch the target branch (e.g., main)
            git fetch origin ${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
            poetry run pytest --picked --picked-log=changes.log --parent-branch origin/${{ github.base_ref }} -v
  
        # Optional: Run all tests if needed, maybe on main branch pushes only
        # - name: Run all tests
        #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        #   env:
        #     OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        #     VIRUSTOTAL_API_KEY: ${{ secrets.VIRUSTOTAL_API_KEY }}
        #   run: poetry run pytest -v
  
        - name: Run Semgrep SAST Scan
          uses: returntocorp/semgrep-action@v1
          # Make sure you have a .semgrep.yml file in your repo
          with:
            publishToken: ${{ secrets.SEMGREP_APP_TOKEN }} # Optional: for Semgrep App dashboard integration
